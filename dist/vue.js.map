{"version":3,"file":"vue.js","sources":["../src/observe/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["class Observer {\r\n  constructor(data) {\r\n    // Object.defineProperty只能劫持已经存在的属性（Vue里面会为此单独写一些api $set $delete）\r\n    if (Array.isArray(data)) {\r\n      // 这里我们可以重写数组中的变异方法\r\n      // 7个变异方法 push pop shift unshift splice reverse sort 是可以修改数组本身的\r\n      this.observeArray(data);\r\n    } else {\r\n      this.walk(data);\r\n    }\r\n  }\r\n  walk(data) {\r\n    // 循环对象 对属性依次劫持\r\n    // 重新定义属性（存在性能问题，Vue3使用proxy解决）\r\n    Object.keys(data).forEach((key) => defineReactive(data, key, data[key]));\r\n  }\r\n  observeArray(data) {\r\n    // 观测数组\r\n    // 如果数组中放的是对象 也可以监控到对象的变化\r\n    data.forEach((item) => observe(item));\r\n  }\r\n}\r\n\r\nexport function defineReactive(target, key, value) {\r\n  observe(value); // 对所有的对象都进行属性劫持\r\n  // 闭包 属性劫持\r\n  Object.defineProperty(target, key, {\r\n    get() {\r\n      return value;\r\n    },\r\n    set(newValue) {\r\n      if (newValue === value) return;\r\n      // 用户设置的值也需要进行代理（存在将原属性值设置为新对象的情况）\r\n      observe(newValue);\r\n      value = newValue;\r\n    },\r\n  });\r\n}\r\n\r\nexport function observe(data) {\r\n  // 对这个对象进行劫持\r\n  if (typeof data !== \"object\" || data == null) {\r\n    return; // 只对对象进行劫持\r\n  }\r\n  // 如果一个对象被劫持过了，那就不需要再被劫持了（要判断一个对象是否被劫持过，可以增添一个实例，用实例来判断是否被劫持过）\r\n  return new Observer(data);\r\n}\r\n","import { observe } from \"./observe/index\";\r\n\r\nexport function initState(vm) {\r\n  const opts = vm.$options; // 获取用户的配置\r\n  if (opts.data) {\r\n    initData(vm);\r\n  }\r\n}\r\n\r\nfunction proxy(vm, target, key) {\r\n  Object.defineProperty(vm, key, {\r\n    get() {\r\n      return vm[target][key];\r\n    },\r\n    set(newValue) {\r\n      vm[target][key] = newValue;\r\n    },\r\n  });\r\n}\r\n\r\nfunction initData(vm) {\r\n  let data = vm.$options.data; // data可能是函数或对象\r\n  data = typeof data === \"function\" ? data.call(vm) : data; // data是用户返回的对象\r\n\r\n  vm._data = data; // 将返回的对象放到_data上\r\n  // 对数据进行劫持 vue2 里采用了Object.defineProperty\r\n  observe(data);\r\n  // 将vm._data用vm来代理就可以了\r\n  for (const key in data) {\r\n    proxy(vm, \"_data\", key);\r\n  }\r\n}\r\n","import { initState } from \"./state\";\r\n\r\nexport function initMixin(Vue) {\r\n  Vue.prototype._init = function (options) {\r\n    // vue vm.$options 就是获取用户的配置\r\n    const vm = this;\r\n    vm.$options = options; // 将用户的选项挂载到实例上\r\n\r\n    // 初始化状态\r\n    initState(vm);\r\n  };\r\n}\r\n","import { initMixin } from \"./init\";\r\n\r\nfunction Vue(options) {\r\n  // options就是用户的选项\r\n  this._init(options);\r\n}\r\n\r\ninitMixin(Vue); // 扩展了init方法\r\n\r\nexport default Vue;\r\n"],"names":["Observer","data","Array","isArray","observeArray","walk","Object","keys","forEach","key","defineReactive","item","observe","target","value","defineProperty","get","set","newValue","initState","vm","opts","$options","initData","proxy","call","_data","initMixin","Vue","prototype","_init","options"],"mappings":"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"}