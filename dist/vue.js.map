{"version":3,"file":"vue.js","sources":["../src/utils.js","../src/globalAPI.js","../src/observe/dep.js","../src/observe/array.js","../src/observe/index.js","../src/observe/watcher.js","../src/state.js","../src/compiler/parse.js","../src/compiler/index.js","../src/vdom/index.js","../src/vdom/patch.js","../src/lifecycle.js","../src/init.js","../src/index.js"],"sourcesContent":["// 静态方法\r\nconst strategies = {};\r\nconst LIFECYCLE = [\"beforeCreate\", \"created\"];\r\nLIFECYCLE.forEach((hook) => {\r\n  strategies[hook] = function (p, c) {\r\n    if (c) {\r\n      // 如果儿子有 父亲有 让父亲和儿子拼在一起\r\n      if (p) {\r\n        return p.concat(c);\r\n      } else {\r\n        // 儿子有 父亲没有 将儿子包装成数组\r\n        return [c];\r\n      }\r\n    } else {\r\n      // 儿子没有 用父亲的\r\n      return p;\r\n    }\r\n  };\r\n});\r\n\r\nexport function mergeOptions(parent, child) {\r\n  const options = {};\r\n  for (const key in parent) {\r\n    mergeField(key);\r\n  }\r\n  for (const key in child) {\r\n    if (!parent.hasOwnProperty(key)) {\r\n      mergeField(key);\r\n    }\r\n  }\r\n  function mergeField(key) {\r\n    // 策略模式 减少if-else\r\n    if (strategies[key]) {\r\n      options[key] = strategies[key](parent[key], child[key]);\r\n    } else {\r\n      options[key] = child[key] || parent[key]; // 优先采用儿子，在采用父亲\r\n    }\r\n  }\r\n  return options;\r\n}\r\n","import { mergeOptions } from \"./utils\";\r\n\r\nexport function initGlobalAPI(Vue) {\r\n  Vue.options = {};\r\n\r\n  Vue.mixin = function (mixin) {\r\n    this.options = mergeOptions(this.options, mixin);\r\n    return this;\r\n  };\r\n}\r\n","let id = 0;\r\nclass Dep {\r\n  constructor() {\r\n    this.id = id++; // 属性的dep要收集watcher\r\n    this.subs = []; // 这里存放着当前属性对应的watcher有哪些\r\n  }\r\n  depend() {\r\n    // 这里我们不希望放重复的watcher，而且刚才只是一个单向的关系dep -> watcher\r\n    // watcher记录dep\r\n    // dep和watcher是一个多对多的关系（一个属性可以在多个组件中使用dep -> 多个watcher）\r\n    // 一个组件中由多个属性组成（一个watcher对应多个dep）\r\n    Dep.target.addDep(this); // 让watcher记住dep\r\n  }\r\n  addSub(watcher) {\r\n    this.subs.push(watcher);\r\n  }\r\n  notify() {\r\n    this.subs.forEach((watcher) => watcher.update()); // 告诉watcher要更新了\r\n  }\r\n}\r\n\r\nDep.target = null;\r\n\r\nlet stack = [];\r\nexport function pushTarget(watcher) {\r\n  stack.push(watcher);\r\n  Dep.target = watcher;\r\n}\r\n\r\nexport function popTarget() {\r\n  stack.pop();\r\n  Dep.target = stack[stack.length - 1];\r\n}\r\n\r\nexport default Dep;\r\n","// 重写数组中的变异方法\r\nlet oldArrayProto = Array.prototype; // 获取数组的原型\r\n\r\n// newArrayProto.__proto__ = oldArrayProto\r\nexport let newArrayProto = Object.create(oldArrayProto);\r\n\r\nlet methods = [\"push\", \"pop\", \"shift\", \"unshift\", \"splice\", \"reverse\", \"sort\"];\r\n\r\nmethods.forEach((method) => {\r\n  newArrayProto[method] = function (...args) {\r\n    const result = oldArrayProto[method].call(this, ...args); // 内部调用原来的方法，函数的劫持，aop编程\r\n    // 我们需要对新增的数据再次进行劫持\r\n    let inserted;\r\n    let ob = this.__ob__;\r\n    switch (method) {\r\n      case \"push\":\r\n      case \"unshift\":\r\n        inserted = args;\r\n        break;\r\n      case \"splice\":\r\n        inserted = args.splice(2);\r\n      default:\r\n        break;\r\n    }\r\n    // 对新增的内容再次进行观测\r\n    if (inserted) {\r\n      ob.observeArray(inserted);\r\n    }\r\n\r\n    ob.dep.notify();\r\n    return result;\r\n  };\r\n});\r\n","import { newArrayProto } from \"./array\";\r\nimport Dep from \"./dep\";\r\nclass Observer {\r\n  constructor(data) {\r\n    // 给每个对象都增加收集功能\r\n    this.dep = new Dep();\r\n    // 给数据加了一个标识，如果数据上有__ob__则说明这个属性被观测过了\r\n    Object.defineProperty(data, \"__ob__\", {\r\n      value: this,\r\n      enumerable: false, // 将__ob__变成不可枚举（循环的时候无法获取到）\r\n    });\r\n    // Object.defineProperty只能劫持已经存在的属性（Vue里面会为此单独写一些api $set $delete）\r\n    if (Array.isArray(data)) {\r\n      // 这里我们可以重写数组中的变异方法\r\n      // 7个变异方法 push pop shift unshift splice reverse sort 是可以修改数组本身的\r\n      data.__proto__ = newArrayProto; // 需要保留数组原有的特性，并且可以重写部分方法\r\n      this.observeArray(data);\r\n    } else {\r\n      this.walk(data);\r\n    }\r\n  }\r\n  walk(data) {\r\n    // 循环对象 对属性依次劫持\r\n    // 重新定义属性（存在性能问题，Vue3使用proxy解决）\r\n    Object.keys(data).forEach((key) => defineReactive(data, key, data[key]));\r\n  }\r\n  observeArray(data) {\r\n    // 观测数组\r\n    // 如果数组中放的是对象 也可以监控到对象的变化\r\n    data.forEach((item) => observe(item));\r\n  }\r\n}\r\n\r\n// 深层次嵌套会递归，递归多了性能差，不存在的属性监听不到，存在的属性要重写方法\r\nfunction dependArray(value) {\r\n  for (let i = 0; i < value.length; i++) {\r\n    let current = value[i];\r\n    current.__ob__ && current.__ob__.dep.depend();\r\n    if (Array.isArray(current)) {\r\n      dependArray(current);\r\n    }\r\n  }\r\n}\r\n\r\nexport function defineReactive(target, key, value) {\r\n  let childOb = observe(value); // 对所有的对象都进行属性劫持\r\n  let dep = new Dep(); // 每一个属性都有一个dep\r\n  // 闭包 属性劫持\r\n  Object.defineProperty(target, key, {\r\n    get() {\r\n      // 取值的时候会执行get\r\n      if (Dep.target) {\r\n        dep.depend(); // 让这个属性的收集器记住当前的watcher\r\n        if (childOb) {\r\n          childOb.dep.depend(); // 让数组和对象本身也实现依赖收集\r\n          if (Array.isArray(value)) {\r\n            dependArray(value);\r\n          }\r\n        }\r\n      }\r\n      return value;\r\n    },\r\n    set(newValue) {\r\n      if (newValue === value) return;\r\n      // 用户设置的值也需要进行代理（存在将原属性值设置为新对象的情况）\r\n      observe(newValue);\r\n      value = newValue;\r\n      dep.notify(); // 通知更新\r\n    },\r\n  });\r\n}\r\n\r\nexport function observe(data) {\r\n  // 对这个对象进行劫持\r\n  if (typeof data !== \"object\" || data == null) {\r\n    return; // 只对对象进行劫持\r\n  }\r\n  if (data.__ob__ instanceof Observer) {\r\n    // 说明这个对象被代理过了\r\n    return data.__ob__;\r\n  }\r\n  // 如果一个对象被劫持过了，那就不需要再被劫持了（要判断一个对象是否被劫持过，可以增添一个实例，用实例来判断是否被劫持过）\r\n  return new Observer(data);\r\n}\r\n","import Dep, { popTarget, pushTarget } from \"./dep\";\r\n\r\nlet id = 0;\r\n\r\n// 1）当我们创建渲染watcher的时候我们会把当前的渲染watcher放到Dep.target上\r\n// 2）调用_render()会取值 走到get上\r\n// 每个属性都有一个dep（属性就是被观察者，属性变化了会通知观察者来更新），watcher就是观察者 -> 观察者模式\r\n\r\nclass Watcher {\r\n  constructor(vm, exprOrFn, options, cb) {\r\n    this.vm = vm;\r\n    this.cb = cb;\r\n    this.id = id++;\r\n    this.renderWatcher = options; // 是一个渲染watcher\r\n    if (typeof exprOrFn === \"string\") {\r\n      this.getter = function () {\r\n        return vm[exprOrFn];\r\n      };\r\n    } else {\r\n      this.getter = exprOrFn; // getter意味着调用这个函数可以发生取值操作\r\n    }\r\n    this.deps = []; // 实现计算属性和一些清理工作需要用到\r\n    this.depsId = new Set();\r\n    this.lazy = options.lazy;\r\n    this.dirty = this.lazy; // 缓存值\r\n    this.user = options.user; // 标识是否是自己的watcher\r\n    this.value = this.lazy ? undefined : this.get();\r\n  }\r\n  addDep(dep) {\r\n    // 一个组件 对应多个属性 重复的属性不用记录\r\n    let id = dep.id;\r\n    if (!this.depsId.has(id)) {\r\n      this.deps.push(dep);\r\n      this.depsId.add(id);\r\n      dep.addSub(this); // watcher已经记住了dep而且去重了，此时让dep也记住watcher\r\n    }\r\n  }\r\n  evaluate() {\r\n    this.value = this.get(); // 获取到用户函数的返回值并且还要标识为脏\r\n    this.dirty = false;\r\n  }\r\n  get() {\r\n    pushTarget(this); // 静态属性就是只有一份\r\n    const value = this.getter.call(this.vm); // 会去vm上取值 vm._update(vm._render)\r\n    popTarget(); // 渲染完毕后就清空\r\n    return value;\r\n  }\r\n  depend() {\r\n    // watcher的depend就是让dep去调depend\r\n    let i = this.deps.length;\r\n    while (i--) {\r\n      this.deps[i].depend(); // 让计算属性watcher也收集渲染watcher\r\n    }\r\n  }\r\n  update() {\r\n    if (this.lazy) {\r\n      this.dirty = true;\r\n    } else {\r\n      queueWatcher(this); // 把当前的watcher暂存起来\r\n    }\r\n  }\r\n  run() {\r\n    let oldValue = this.value;\r\n    let newValue = this.get();\r\n    if (this.user) {\r\n      this.cb.call(this.vm, newValue, oldValue);\r\n    }\r\n  }\r\n}\r\n\r\nlet queue = [];\r\nlet has = {};\r\nlet pending = false;\r\n\r\nfunction flushSchedulerQueue() {\r\n  let flushQueue = queue.slice(0);\r\n  queue = [];\r\n  has = {};\r\n  pending = false;\r\n  flushQueue.forEach((q) => q.run()); // 在刷新的过程中可能还有新的watcher 重新放到queue中\r\n}\r\n\r\nfunction queueWatcher(watcher) {\r\n  const id = watcher.id;\r\n  if (!has[id]) {\r\n    queue.push(watcher);\r\n    has[id] = true;\r\n    // 不管update执行多少次，最终只执行一轮刷新操作\r\n    if (!pending) {\r\n      nextTick(flushSchedulerQueue);\r\n      pending = true;\r\n    }\r\n  }\r\n}\r\n\r\nlet callbacks = [];\r\nlet waiting = false;\r\nfunction flushCallbacks() {\r\n  let cbs = callbacks.slice(0);\r\n  waiting = false;\r\n  callbacks = [];\r\n  cbs.forEach((cb) => cb()); // 按照顺序依次执行\r\n}\r\n\r\n// nextTick没有直接使用某个api 而是采用优雅降级的方式\r\nlet timerFunc;\r\nif (Promise) {\r\n  timerFunc = () => {\r\n    Promise.resolve().then(flushCallbacks);\r\n  };\r\n} else if (MutationObserver) {\r\n  let observer = new MutationObserver(flushCallbacks); // 这里传入的回调是异步执行的\r\n  let textNode = document.createTextNode(1);\r\n  observer.observe(textNode, {\r\n    characterData: true,\r\n  });\r\n  timerFunc = () => {\r\n    textNode.textContent = 2;\r\n  };\r\n} else if (setImmediate) {\r\n  timerFunc = () => {\r\n    setImmediate(flushCallbacks);\r\n  };\r\n} else {\r\n  timerFunc = () => {\r\n    setTimeout(flushCallbacks);\r\n  };\r\n}\r\n\r\nexport function nextTick(cb) {\r\n  callbacks.push(cb);\r\n  if (!waiting) {\r\n    timerFunc();\r\n    waiting = true;\r\n  }\r\n}\r\n\r\nexport default Watcher;\r\n","import Dep from \"./observe/dep\";\r\nimport { observe } from \"./observe/index\";\r\nimport Watcher, { nextTick } from \"./observe/watcher\";\r\n\r\nexport function initState(vm) {\r\n  const opts = vm.$options; // 获取用户的配置\r\n  if (opts.data) {\r\n    initData(vm);\r\n  }\r\n  if (opts.computed) {\r\n    initComputed(vm);\r\n  }\r\n  if (opts.watch) {\r\n    initWatch(vm);\r\n  }\r\n}\r\n\r\nfunction initWatch(vm) {\r\n  let watch = vm.$options.watch;\r\n  for (const key in watch) {\r\n    const handler = watch[key];\r\n    if (Array.isArray(handler)) {\r\n      for (let i = 0; i < handler.length; i++) {\r\n        createWatcher(vm, key, handler[i]);\r\n      }\r\n    } else {\r\n      createWatcher(vm, key, handler);\r\n    }\r\n  }\r\n}\r\n\r\nfunction createWatcher(vm, key, handler) {\r\n  if (typeof handler === \"string\") {\r\n    handler = vm[handler];\r\n  }\r\n  return vm.$watch(key, handler);\r\n}\r\n\r\nfunction proxy(vm, target, key) {\r\n  Object.defineProperty(vm, key, {\r\n    get() {\r\n      return vm[target][key];\r\n    },\r\n    set(newValue) {\r\n      vm[target][key] = newValue;\r\n    },\r\n  });\r\n}\r\n\r\nfunction initData(vm) {\r\n  let data = vm.$options.data; // data可能是函数或对象\r\n  data = typeof data === \"function\" ? data.call(vm) : data; // data是用户返回的对象\r\n\r\n  vm._data = data; // 将返回的对象放到_data上\r\n  // 对数据进行劫持 vue2 里采用了Object.defineProperty\r\n  observe(data);\r\n  // 将vm._data用vm来代理就可以了\r\n  for (const key in data) {\r\n    proxy(vm, \"_data\", key);\r\n  }\r\n}\r\n\r\nfunction initComputed(vm) {\r\n  const computed = vm.$options.computed;\r\n  const watchers = (vm._computedWatchers = {}); // 将计算属性watcher保存到vm上\r\n  for (const key in computed) {\r\n    let userDef = computed[key];\r\n    // 需要监控计算属性中get的变化\r\n    const fn = typeof userDef == \"function\" ? userDef : userDef.get;\r\n    watchers[key] = new Watcher(vm, fn, { lazy: true });\r\n    defineComputed(vm, key, userDef);\r\n  }\r\n}\r\n\r\nexport function initStateMixin(Vue) {\r\n  Vue.prototype.$nextTick = nextTick;\r\n  Vue.prototype.$watch = function (exprOrFn, cb) {\r\n    new Watcher(this, exprOrFn, { user: true }, cb);\r\n  };\r\n}\r\n\r\nfunction defineComputed(target, key, userDef) {\r\n  const setter = userDef.set || (() => {});\r\n  Object.defineProperty(target, key, {\r\n    get: createComputedGetter(key),\r\n    set: setter,\r\n  });\r\n}\r\n\r\n// 计算属性根本不会收集依赖，只会让自己的依赖属性去收集依赖\r\nfunction createComputedGetter(key) {\r\n  return function () {\r\n    const watcher = this._computedWatchers[key]; // 获取对应属性的watcher\r\n    if (watcher.dirty) {\r\n      // 如果是脏的就去执行用户传入的函数\r\n      watcher.evaluate(); // 求值后dirty变为了false，下次就不求值了\r\n    }\r\n    if (Dep.target) {\r\n      // 计算属性出栈后还要渲染watcher，应该让计算属性watcher里面的属性也去收集上一层watcher\r\n      watcher.depend();\r\n    }\r\n    return watcher.value;\r\n  };\r\n}\r\n","const ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`;\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`;\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`);\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`);\r\nconst attribute =\r\n  /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;\r\nconst startTagClose = /^\\s*(\\/?)>/;\r\n\r\n// 对模版进行编译处理\r\nexport function parseHTML(html) {\r\n  // html最开始肯定是一个 <\r\n\r\n  const ELEMENT_TYPE = 1;\r\n  const TEXT_TYPE = 3;\r\n  const stack = []; // 用于存放元素\r\n  let currentParent; // 指向的是栈中的最后一个\r\n  let root;\r\n\r\n  // 最终转化成一颗ast\r\n  function createASTElement(tag, attrs) {\r\n    return {\r\n      tag,\r\n      type: ELEMENT_TYPE,\r\n      children: [],\r\n      attrs,\r\n      parent: null,\r\n    };\r\n  }\r\n\r\n  // 利用栈型结构来构造一棵树\r\n  function start(tag, attrs) {\r\n    let node = createASTElement(tag, attrs);\r\n    if (!root) {\r\n      // 看一下是否是空树\r\n      root = node; // 如果为空则当前是树的根节点\r\n    }\r\n    if (currentParent) {\r\n      node.parent = currentParent;\r\n      currentParent.children.push(node);\r\n    }\r\n    stack.push(node);\r\n    currentParent = node; // currentParent为战中的最后一个\r\n  }\r\n\r\n  function chars(text) {\r\n    // 文本直接放到当前指向的节点中\r\n    text = text.replace(/\\s/g, \"\");\r\n    text &&\r\n      currentParent.children.push({\r\n        type: TEXT_TYPE,\r\n        text,\r\n        parent: currentParent,\r\n      });\r\n  }\r\n\r\n  function end() {\r\n    stack.pop(); // 弹出最后一个\r\n    currentParent = stack[stack.length - 1];\r\n  }\r\n\r\n  function advance(n) {\r\n    html = html.substring(n);\r\n  }\r\n\r\n  function parseStartTag() {\r\n    const start = html.match(startTagOpen);\r\n    if (start) {\r\n      const match = {\r\n        tagName: start[1], // 标签名\r\n        attrs: [],\r\n      };\r\n      advance(start[0].length);\r\n      // 如果不是开始标签的结束 就一直匹配下去\r\n      let attr, end;\r\n      while (\r\n        !(end = html.match(startTagClose)) &&\r\n        (attr = html.match(attribute))\r\n      ) {\r\n        advance(attr[0].length);\r\n        match.attrs.push({\r\n          name: attr[1],\r\n          value: attr[3] || attr[4] || attr[5] || true,\r\n        });\r\n      }\r\n      if (end) {\r\n        advance(end[0].length);\r\n      }\r\n      return match;\r\n    }\r\n    return false; // 不是开始标签\r\n  }\r\n\r\n  while (html) {\r\n    // 如果textEnd为0 说明是一个开始标签或者结束标签\r\n    // 如果textEnd>0 说明就是文本的结束位置\r\n    let textEnd = html.indexOf(\"<\"); // 如果indexOf中的索引是0 则说明是个标签\r\n    if (textEnd == 0) {\r\n      const startTagMatch = parseStartTag(); // 开始标签的匹配结果\r\n      if (startTagMatch) {\r\n        // 解析到的开始标签\r\n        start(startTagMatch.tagName, startTagMatch.attrs);\r\n        continue;\r\n      }\r\n\r\n      const endTagMatch = html.match(endTag);\r\n      if (endTagMatch) {\r\n        end();\r\n        advance(endTagMatch[0].length);\r\n        continue;\r\n      }\r\n    }\r\n\r\n    if (textEnd > 0) {\r\n      let text = html.substring(0, textEnd); // 文本内容\r\n      if (text) {\r\n        chars(text);\r\n        advance(text.length); // 解析到的文本\r\n      }\r\n    }\r\n  }\r\n\r\n  return root;\r\n}\r\n","import { parseHTML } from \"./parse\";\r\n\r\nfunction genProps(attrs) {\r\n  let str = \"\";\r\n  for (let i = 0; i < attrs.length; i++) {\r\n    let attr = attrs[i];\r\n    if (attr.name == \"style\") {\r\n      let obj = {};\r\n      attr.value.split(\";\").forEach((item) => {\r\n        let [key, value] = item.split(\":\");\r\n        obj[key] = value;\r\n      });\r\n      attr.value = obj;\r\n    }\r\n    str += `${attr.name}:${JSON.stringify(attr.value)},`;\r\n  }\r\n  return `{${str.slice(0, -1)}}`;\r\n}\r\n\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g;\r\nfunction gen(node) {\r\n  if (node.type == 1) {\r\n    return codegen(node);\r\n  } else {\r\n    let text = node.text;\r\n    if (!defaultTagRE.test(text)) {\r\n      return `_v(${JSON.stringify(text)})`;\r\n    } else {\r\n      let tokens = [];\r\n      let match;\r\n      defaultTagRE.lastIndex = 0;\r\n      let lastIndex = 0;\r\n      while ((match = defaultTagRE.exec(text))) {\r\n        let index = match.index;\r\n        if (index > lastIndex) {\r\n          tokens.push(JSON.stringify(text.slice(lastIndex, index)));\r\n        }\r\n        tokens.push(`_s(${match[1].trim()})`);\r\n        lastIndex = index + match[0].length;\r\n      }\r\n      if (lastIndex < text.length) {\r\n        tokens.push(JSON.stringify(text.slice(lastIndex)));\r\n      }\r\n      return `_v(${tokens.join(\"+\")})`;\r\n    }\r\n  }\r\n}\r\n\r\nfunction genChildren(children) {\r\n  return children.map((child) => gen(child)).join(\",\");\r\n}\r\n\r\nfunction codegen(ast) {\r\n  let children = genChildren(ast.children);\r\n  let code = `_c('${ast.tag}',${\r\n    ast.attrs.length > 0 ? genProps(ast.attrs) : \"null\"\r\n  }${ast.children.length > 0 ? `,${children}` : \"\"})`;\r\n  return code;\r\n}\r\n\r\nexport function compileToFunction(template) {\r\n  // 1.将template转化成ast语法树\r\n  let ast = parseHTML(template);\r\n  // 2.生成render方法（render方法执行后的返回结果就是虚拟DOM）\r\n  let code = codegen(ast);\r\n  // 模版引擎的实现原理就是 with + new Function\r\n  code = `with(this){return ${code}}`;\r\n  let render = new Function(code); // 根据代码生成render函数\r\n  return render;\r\n}\r\n","export function createElementVNode(vm, tag, data, ...children) {\r\n  if (data == null) {\r\n    data = {};\r\n  }\r\n  let key = data.key;\r\n  if (key) {\r\n    delete data.key;\r\n  }\r\n  return vnode(vm, tag, key, data, children);\r\n}\r\n\r\nexport function createTextVNode(vm, text) {\r\n  return vnode(vm, undefined, undefined, undefined, undefined, text);\r\n}\r\n\r\n// ast做的是语法层面的转化 它描述的是语法本身（描述js css html）\r\n// 虚拟dom描述的dom元素，可以增加一些自定义属性（描述dom）\r\nfunction vnode(vm, tag, key, data, children, text) {\r\n  return {\r\n    vm,\r\n    tag,\r\n    key,\r\n    data,\r\n    children,\r\n    text,\r\n  };\r\n}\r\n\r\nexport function isSameVnode(vnode1, vnode2) {\r\n  return vnode1.tag === vnode2.tag && vnode1.key === vnode2.key;\r\n}\r\n","import { isSameVnode } from \"./index\";\r\nexport function createElm(vnode) {\r\n  let { tag, data, children, text } = vnode;\r\n  if (typeof tag === \"string\") {\r\n    vnode.el = document.createElement(tag);\r\n    patchProps(vnode.el, {}, data);\r\n    children.forEach((child) => {\r\n      vnode.el.appendChild(createElm(child));\r\n    });\r\n  } else {\r\n    vnode.el = document.createTextNode(text);\r\n  }\r\n  return vnode.el;\r\n}\r\n\r\nexport function patchProps(el, oldProps = {}, props = {}) {\r\n  // 老的节点中有的样式，新的没有 要删除老的\r\n  let oldStyles = oldProps.style || {};\r\n  let newStyles = props.style || {};\r\n  for (const key in oldStyles) {\r\n    if (!newStyles[key]) {\r\n      el.style[key] = \"\";\r\n    }\r\n  }\r\n\r\n  // 老的节点中有的属性，新的没有 要删除老的\r\n  for (const key in oldProps) {\r\n    if (!props[key]) {\r\n      el.removeAttribute(key);\r\n    }\r\n  }\r\n\r\n  // 用新的覆盖掉老的\r\n  for (const key in props) {\r\n    if (key == \"style\") {\r\n      for (const styleName in props.style) {\r\n        el.style[styleName] = props.style[styleName];\r\n      }\r\n    } else {\r\n      el.setAttribute(key, props[key]);\r\n    }\r\n  }\r\n}\r\n\r\nexport function patch(oldVNode, newVNode) {\r\n  // 是否是真实节点(dom)，nodeType为dom上的原生属性\r\n  const isRealElement = oldVNode.nodeType;\r\n  if (isRealElement) {\r\n    const elm = oldVNode; // 获取真实元素\r\n    const parentElm = elm.parentNode; // 拿到父元素\r\n    let newElm = createElm(newVNode);\r\n    parentElm.insertBefore(newElm, elm.nextSibling); // 将新元素插入到老元素的后面\r\n    parentElm.removeChild(elm); // 删除老元素\r\n    return newElm;\r\n  } else {\r\n    // diff算法\r\n    // 1.两个节点不是同一个节点 直接删除老的换上新的\r\n    // 2.两个节点是同一个节点（判断节点的tag和节点的key）比较两个节点的属性是否有差异（复用老的节点，将差异的属性更改）\r\n    // 3.节点比较完毕后就需要比较两人的儿子\r\n    return patchVnode(oldVNode, newVNode);\r\n  }\r\n}\r\n\r\nfunction patchVnode(oldVNode, newVNode) {\r\n  if (!isSameVnode(oldVNode, newVNode)) {\r\n    // tag == tag   key == key\r\n    // 用老节点的父亲进行替换\r\n    let el = createElm(newVNode);\r\n    oldVNode.el.parentNode.replaceChild(el, oldVNode.el);\r\n    return el;\r\n  }\r\n\r\n  // 文本情况 比较一下文本的内容\r\n  let el = (newVNode.el = oldVNode.el); // 复用老节点的元素\r\n  if (!oldVNode.tag) {\r\n    // 是文本\r\n    if (oldVNode.text != newVNode.text) {\r\n      el.textContent = newVNode.text; // 用新的文本覆盖掉老的\r\n    }\r\n  }\r\n\r\n  // 是标签 比较标签的属性\r\n  patchProps(el, oldVNode.data, newVNode.data);\r\n\r\n  // 比较儿子节点 比较的时候一方有儿子 一方没有儿子\r\n  // 或者两方都有儿子\r\n  let oldChildren = oldVNode.children || [];\r\n  let newChildren = newVNode.children || [];\r\n  if (oldChildren.length > 0 && newChildren.length > 0) {\r\n    // 完整的diff算法 需要比较两个人的儿子\r\n    updateChildren(el, oldChildren, newChildren);\r\n  } else if (newChildren.length > 0) {\r\n    // 老的没有 新的有\r\n    mountChildren(el, newChildren);\r\n  } else if (oldChildren.length > 0) {\r\n    // 新的没有 老的有 要删除\r\n    el.innerHTML = \"\";\r\n  }\r\n\r\n  return el;\r\n}\r\n\r\nfunction mountChildren(el, newChildren) {\r\n  for (let i = 0; i < newChildren.length; i++) {\r\n    let child = newChildren[i];\r\n    el.appendChild(createElm(child));\r\n  }\r\n}\r\n\r\nfunction updateChildren(el, oldChildren, newChildren) {\r\n  // 采用双指针的方式 比较两个节点\r\n  let oldStartIndex = 0;\r\n  let newStartIndex = 0;\r\n  let oldEndIndex = oldChildren.length - 1;\r\n  let newEndIndex = newChildren.length - 1;\r\n\r\n  let oldStartVnode = oldChildren[0];\r\n  let newStartVnode = newChildren[0];\r\n\r\n  let oldEndVnode = oldChildren[oldEndIndex];\r\n  let newEndVnode = newChildren[newEndIndex];\r\n\r\n  function makeIndexByKey(children) {\r\n    let map = {};\r\n    children.forEach((child, index) => {\r\n      map[child.key] = index;\r\n    });\r\n    return map;\r\n  }\r\n  let map = makeIndexByKey(oldChildren);\r\n\r\n  while (oldStartIndex <= oldEndIndex && newStartIndex <= newEndIndex) {\r\n    // 如果有节点为空则指向下一个\r\n    if (!oldStartVnode) {\r\n      oldStartVnode = oldChildren[++oldStartIndex];\r\n    } else if (!oldEndVnode) {\r\n      oldEndVnode = oldChildren[--oldEndIndex];\r\n    }\r\n    // 双方有一方头指针大于尾部指针则停止循环\r\n    else if (isSameVnode(oldStartVnode, newStartVnode)) {\r\n      // 比较 头头 节点\r\n      patchVnode(oldStartVnode, newStartVnode); // 如果是相同节点 则递归比较子节点\r\n      oldStartVnode = oldChildren[++oldStartIndex];\r\n      newStartVnode = newChildren[++newStartIndex];\r\n    } else if (isSameVnode(oldEndVnode, newEndVnode)) {\r\n      // 比较 尾尾 节点\r\n      patchVnode(oldEndVnode, newEndVnode); // 如果是相同节点 则递归比较子节点\r\n      oldEndVnode = oldChildren[--oldEndIndex];\r\n      newEndVnode = newChildren[--newEndIndex];\r\n    } else if (isSameVnode(oldEndVnode, newStartVnode)) {\r\n      // 比较 尾头 节点\r\n      patchVnode(oldEndVnode, newStartVnode);\r\n      el.insertBefore(oldEndVnode.el, oldStartVnode.el);\r\n      oldEndVnode = oldChildren[--oldEndIndex];\r\n      newStartVnode = newChildren[++newStartIndex];\r\n    } else if (isSameVnode(oldStartVnode, newEndVnode)) {\r\n      // 比较 头尾 节点\r\n      patchVnode(oldStartVnode, newEndVnode);\r\n      el.insertBefore(oldStartVnode.el, oldEndVnode.el.nextSibling);\r\n      oldStartVnode = oldChildren[++oldStartIndex];\r\n      newEndVnode = newChildren[--newEndIndex];\r\n    } else {\r\n      // 乱序比对\r\n      // 根据老的列表做一个映射关系，用新的去找，如果找到则移动，找不到则添加，最后多余的老元素就删除\r\n      let moveIndex = map[newStartVnode.key]; // 如果找到则说明是要移动的元素\r\n      if (moveIndex !== undefined) {\r\n        let moveVnode = oldChildren[moveIndex];\r\n        el.insertBefore(moveVnode.el, oldStartVnode.el);\r\n        oldChildren[moveIndex] = undefined; // 表示这个节点已经移动走了\r\n        patchVnode(moveVnode, newStartVnode);\r\n      } else {\r\n        el.insertBefore(createElm(newStartVnode), oldStartVnode.el); // 找不到则添加一个新元素\r\n      }\r\n      newStartVnode = newChildren[++newStartIndex];\r\n    }\r\n  }\r\n\r\n  // 多余的新节点插入进去\r\n  if (newStartIndex <= newEndIndex) {\r\n    for (let i = newStartIndex; i <= newEndIndex; i++) {\r\n      let childEl = createElm(newChildren[i]);\r\n      // 当前新的尾节点后面没有元素时 则为向后追加多余的新节点 如果有则向前追加多余的新节点\r\n      let anchor = newChildren[newEndIndex + 1]\r\n        ? newChildren[newEndIndex + 1].el\r\n        : null; // 获取下一个元素\r\n      el.insertBefore(childEl, anchor); // anchor为null时则为appendChild\r\n    }\r\n  }\r\n\r\n  // 多余的老节点删除\r\n  if (oldStartIndex <= oldEndIndex) {\r\n    for (let i = oldStartIndex; i <= oldEndIndex; i++) {\r\n      if (oldChildren[i]) {\r\n        let childEl = oldChildren[i].el;\r\n        el.removeChild(childEl);\r\n      }\r\n    }\r\n  }\r\n}\r\n","import Watcher from \"./observe/watcher\";\r\nimport { createElementVNode, createTextVNode } from \"./vdom\";\r\nimport { patch } from \"./vdom/patch\";\r\n\r\nexport function initLifeCycle(Vue) {\r\n  Vue.prototype._update = function (vnode) {\r\n    // 将vnode转化成真实dom\r\n    const vm = this;\r\n    const el = vm.$el;\r\n    // patch既有初始化的功能 又有更新的逻辑\r\n    vm.$el = patch(el, vnode);\r\n  };\r\n  // _c('div',{},...children);\r\n  Vue.prototype._c = function () {\r\n    return createElementVNode(this, ...arguments);\r\n  };\r\n  // _v(text)\r\n  Vue.prototype._v = function () {\r\n    return createTextVNode(this, ...arguments);\r\n  };\r\n  Vue.prototype._s = function (value) {\r\n    if (typeof value !== \"object\") {\r\n      return value;\r\n    }\r\n    return JSON.stringify(value);\r\n  };\r\n  Vue.prototype._render = function () {\r\n    // 当渲染的时候会去实例中取值，可以将属性和视图绑定在一起\r\n    return this.$options.render.call(this);\r\n  };\r\n}\r\n\r\nexport function mountComponent(vm, el) {\r\n  vm.$el = el;\r\n  // 1.调用render方法产生虚拟节点 虚拟DOM\r\n  const updateComponent = () => {\r\n    vm._update(vm._render());\r\n  };\r\n\r\n  const watcher = new Watcher(vm, updateComponent, true); // true用于标识是一个渲染watcher\r\n  // 2.根据虚拟DOM产生真实DOM\r\n  // 3.插入到el元素中\r\n}\r\n\r\n// Vue的核心流程\r\n// 1）创造响应式数据\r\n// 2）模版转换成ast语法树\r\n// 3）将ast语法树转换成render函数\r\n// 4）执行render函数会产生虚拟节点（使用响应式数据）\r\n// 5) 根据生成的虚拟节点创造真实的DOM\r\n// 后续每次数据更新可以只执行render函数（无需再次执行ast转化的过程）\r\n\r\nexport function callHook(vm, hook) {\r\n  const handlers = vm.$options[hook];\r\n  if (handlers) {\r\n    handlers.forEach((handler) => handler.call(vm));\r\n  }\r\n}\r\n","import { initState } from \"./state\";\r\nimport { compileToFunction } from \"./compiler\";\r\nimport { callHook, mountComponent } from \"./lifecycle\";\r\nimport { mergeOptions } from \"./utils\";\r\n\r\nexport function initMixin(Vue) {\r\n  Vue.prototype._init = function (options) {\r\n    // vue vm.$options 就是获取用户的配置\r\n    const vm = this;\r\n    vm.$options = mergeOptions(this.constructor.options, options); // 将用户的选项挂载到实例上\r\n\r\n    callHook(vm, \"beforeCreate\");\r\n\r\n    // 初始化状态\r\n    initState(vm);\r\n\r\n    callHook(vm, \"created\");\r\n\r\n    if (options.el) {\r\n      vm.$mount(options.el); // 实现数据的挂载\r\n    }\r\n  };\r\n  Vue.prototype.$mount = function (el) {\r\n    const vm = this;\r\n    el = document.querySelector(el);\r\n    let ops = vm.$options;\r\n    if (!ops.render) {\r\n      // 先进行查找有没有render函数\r\n      let template; // 没有render看一下是否写了template，没写template采用外部的template\r\n      if (!ops.template && el) {\r\n        // 没有写模版，但写了el\r\n        template = el.outerHTML;\r\n      } else {\r\n        if (el) {\r\n          template = ops.template; // 如果有el，则采用模版的内容\r\n        }\r\n      }\r\n      if (template && el) {\r\n        // 这里需要对模版进行编译\r\n        const render = compileToFunction(template);\r\n        ops.render = render;\r\n      }\r\n    }\r\n\r\n    mountComponent(vm, el); // 组件的挂载\r\n  };\r\n}\r\n","import { initGlobalAPI } from \"./globalAPI\";\r\nimport { initMixin } from \"./init\";\r\nimport { initLifeCycle } from \"./lifecycle\";\r\nimport { initStateMixin } from \"./state\";\r\n\r\nimport { compileToFunction } from \"./compiler\";\r\nimport { createElm, patch } from \"./vdom/patch\";\r\n\r\nfunction Vue(options) {\r\n  // options就是用户的选项\r\n  this._init(options);\r\n}\r\n\r\ninitMixin(Vue); // 扩展了init方法\r\ninitLifeCycle(Vue);\r\ninitGlobalAPI(Vue);\r\ninitStateMixin(Vue);\r\n\r\nlet render1 = compileToFunction(`<ul>\r\n<li key=\"d\">4</li>\r\n<li key=\"b\">1</li>\r\n<li key=\"c\">2</li>\r\n<li key=\"e\">3</li>\r\n</ul>`);\r\nlet vm1 = new Vue({ data: { name: \"test\" } });\r\nlet prevVnode = render1.call(vm1);\r\n\r\nlet el = createElm(prevVnode);\r\ndocument.body.appendChild(el);\r\n\r\nlet render2 = compileToFunction(`<ul>\r\n<li key=\"1\">1</li>\r\n<li key=\"2\">2</li>\r\n<li key=\"3\">3</li>\r\n</ul>`);\r\nlet vm2 = new Vue({ data: { name: \"test12\" } });\r\nlet nextVnode = render2.call(vm2);\r\n\r\nsetTimeout(() => {\r\n  patch(prevVnode, nextVnode);\r\n  // let newEl = createElm(nextVnode);\r\n  // el.parentNode.replaceChild(newEl, el);\r\n}, 4000);\r\n\r\nexport default Vue;\r\n"],"names":["strategies","LIFECYCLE","forEach","hook","p","c","concat","mergeOptions","parent","child","options","key","mergeField","hasOwnProperty","initGlobalAPI","Vue","mixin","id","Dep","subs","target","addDep","watcher","push","update","stack","pushTarget","popTarget","pop","length","oldArrayProto","Array","prototype","newArrayProto","Object","create","methods","method","args","result","call","inserted","ob","__ob__","splice","observeArray","dep","notify","Observer","data","defineProperty","value","enumerable","isArray","__proto__","walk","keys","defineReactive","item","observe","dependArray","i","current","depend","childOb","get","set","newValue","Watcher","vm","exprOrFn","cb","renderWatcher","getter","deps","depsId","Set","lazy","dirty","user","undefined","has","add","addSub","queueWatcher","oldValue","queue","pending","flushSchedulerQueue","flushQueue","slice","q","run","nextTick","callbacks","waiting","flushCallbacks","cbs","timerFunc","Promise","resolve","then","MutationObserver","observer","textNode","document","createTextNode","characterData","textContent","setImmediate","setTimeout","initState","opts","$options","initData","computed","initComputed","watch","initWatch","handler","createWatcher","$watch","proxy","_data","watchers","_computedWatchers","userDef","fn","defineComputed","initStateMixin","$nextTick","setter","createComputedGetter","evaluate","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHTML","html","ELEMENT_TYPE","TEXT_TYPE","currentParent","root","createASTElement","tag","attrs","type","children","start","node","chars","text","replace","end","advance","n","substring","parseStartTag","match","tagName","attr","name","textEnd","indexOf","startTagMatch","endTagMatch","genProps","str","obj","split","JSON","stringify","defaultTagRE","gen","codegen","test","tokens","lastIndex","exec","index","trim","join","genChildren","map","ast","code","compileToFunction","template","render","Function","createElementVNode","vnode","createTextVNode","isSameVnode","vnode1","vnode2","createElm","el","createElement","patchProps","appendChild","oldProps","props","oldStyles","style","newStyles","removeAttribute","styleName","setAttribute","patch","oldVNode","newVNode","isRealElement","nodeType","elm","parentElm","parentNode","newElm","insertBefore","nextSibling","removeChild","patchVnode","replaceChild","oldChildren","newChildren","updateChildren","mountChildren","innerHTML","oldStartIndex","newStartIndex","oldEndIndex","newEndIndex","oldStartVnode","newStartVnode","oldEndVnode","newEndVnode","makeIndexByKey","moveIndex","moveVnode","childEl","anchor","initLifeCycle","_update","$el","_c","arguments","_v","_s","_render","mountComponent","updateComponent","callHook","handlers","initMixin","_init","constructor","$mount","querySelector","ops","outerHTML","render1","vm1","prevVnode","body","render2","vm2","nextVnode"],"mappings":"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"}