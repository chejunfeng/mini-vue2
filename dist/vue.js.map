{"version":3,"file":"vue.js","sources":["../src/observe/array.js","../src/observe/index.js","../src/state.js","../src/compiler/parse.js","../src/compiler/index.js","../src/vdom/index.js","../src/lifecycle.js","../src/init.js","../src/index.js"],"sourcesContent":["// 重写数组中的变异方法\r\nlet oldArrayProto = Array.prototype; // 获取数组的原型\r\n\r\n// newArrayProto.__proto__ = oldArrayProto\r\nexport let newArrayProto = Object.create(oldArrayProto);\r\n\r\nlet methods = [\"push\", \"pop\", \"shift\", \"unshift\", \"splice\", \"reverse\", \"sort\"];\r\n\r\nmethods.forEach((method) => {\r\n  newArrayProto[method] = function (...args) {\r\n    const result = oldArrayProto[method].call(this, ...args); // 内部调用原来的方法，函数的劫持，aop编程\r\n    // 我们需要对新增的数据再次进行劫持\r\n    let inserted;\r\n    let ob = this.__ob__;\r\n    switch (method) {\r\n      case \"push\":\r\n      case \"unshift\":\r\n        inserted = args;\r\n        break;\r\n      case \"splice\":\r\n        inserted = args.splice(2);\r\n      default:\r\n        break;\r\n    }\r\n    // 对新增的内容再次进行观测\r\n    if (inserted) {\r\n      ob.observeArray(inserted);\r\n    }\r\n    return result;\r\n  };\r\n});\r\n","import { newArrayProto } from \"./array\";\r\nclass Observer {\r\n  constructor(data) {\r\n    // 给数据加了一个标识，如果数据上有__ob__则说明这个属性被观测过了\r\n    Object.defineProperty(data, \"__ob__\", {\r\n      value: this,\r\n      enumerable: false, // 将__ob__变成不可枚举（循环的时候无法获取到）\r\n    });\r\n    // Object.defineProperty只能劫持已经存在的属性（Vue里面会为此单独写一些api $set $delete）\r\n    if (Array.isArray(data)) {\r\n      // 这里我们可以重写数组中的变异方法\r\n      // 7个变异方法 push pop shift unshift splice reverse sort 是可以修改数组本身的\r\n      data.__proto__ = newArrayProto; // 需要保留数组原有的特性，并且可以重写部分方法\r\n      this.observeArray(data);\r\n    } else {\r\n      this.walk(data);\r\n    }\r\n  }\r\n  walk(data) {\r\n    // 循环对象 对属性依次劫持\r\n    // 重新定义属性（存在性能问题，Vue3使用proxy解决）\r\n    Object.keys(data).forEach((key) => defineReactive(data, key, data[key]));\r\n  }\r\n  observeArray(data) {\r\n    // 观测数组\r\n    // 如果数组中放的是对象 也可以监控到对象的变化\r\n    data.forEach((item) => observe(item));\r\n  }\r\n}\r\n\r\nexport function defineReactive(target, key, value) {\r\n  observe(value); // 对所有的对象都进行属性劫持\r\n  // 闭包 属性劫持\r\n  Object.defineProperty(target, key, {\r\n    get() {\r\n      return value;\r\n    },\r\n    set(newValue) {\r\n      if (newValue === value) return;\r\n      // 用户设置的值也需要进行代理（存在将原属性值设置为新对象的情况）\r\n      observe(newValue);\r\n      value = newValue;\r\n    },\r\n  });\r\n}\r\n\r\nexport function observe(data) {\r\n  // 对这个对象进行劫持\r\n  if (typeof data !== \"object\" || data == null) {\r\n    return; // 只对对象进行劫持\r\n  }\r\n  if (data.__ob__ instanceof Observer) {\r\n    // 说明这个对象被代理过了\r\n    return data.__ob__;\r\n  }\r\n  // 如果一个对象被劫持过了，那就不需要再被劫持了（要判断一个对象是否被劫持过，可以增添一个实例，用实例来判断是否被劫持过）\r\n  return new Observer(data);\r\n}\r\n","import { observe } from \"./observe/index\";\r\n\r\nexport function initState(vm) {\r\n  const opts = vm.$options; // 获取用户的配置\r\n  if (opts.data) {\r\n    initData(vm);\r\n  }\r\n}\r\n\r\nfunction proxy(vm, target, key) {\r\n  Object.defineProperty(vm, key, {\r\n    get() {\r\n      return vm[target][key];\r\n    },\r\n    set(newValue) {\r\n      vm[target][key] = newValue;\r\n    },\r\n  });\r\n}\r\n\r\nfunction initData(vm) {\r\n  let data = vm.$options.data; // data可能是函数或对象\r\n  data = typeof data === \"function\" ? data.call(vm) : data; // data是用户返回的对象\r\n\r\n  vm._data = data; // 将返回的对象放到_data上\r\n  // 对数据进行劫持 vue2 里采用了Object.defineProperty\r\n  observe(data);\r\n  // 将vm._data用vm来代理就可以了\r\n  for (const key in data) {\r\n    proxy(vm, \"_data\", key);\r\n  }\r\n}\r\n","const ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`;\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`;\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`);\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`);\r\nconst attribute =\r\n  /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;\r\nconst startTagClose = /^\\s*(\\/?)>/;\r\n\r\n// 对模版进行编译处理\r\nexport function parseHTML(html) {\r\n  // html最开始肯定是一个 <\r\n\r\n  const ELEMENT_TYPE = 1;\r\n  const TEXT_TYPE = 3;\r\n  const stack = []; // 用于存放元素\r\n  let currentParent; // 指向的是栈中的最后一个\r\n  let root;\r\n\r\n  // 最终转化成一颗ast\r\n  function createASTElement(tag, attrs) {\r\n    return {\r\n      tag,\r\n      type: ELEMENT_TYPE,\r\n      children: [],\r\n      attrs,\r\n      parent: null,\r\n    };\r\n  }\r\n\r\n  // 利用栈型结构来构造一棵树\r\n  function start(tag, attrs) {\r\n    let node = createASTElement(tag, attrs);\r\n    if (!root) {\r\n      // 看一下是否是空树\r\n      root = node; // 如果为空则当前是树的根节点\r\n    }\r\n    if (currentParent) {\r\n      node.parent = currentParent;\r\n      currentParent.children.push(node);\r\n    }\r\n    stack.push(node);\r\n    currentParent = node; // currentParent为战中的最后一个\r\n  }\r\n\r\n  function chars(text) {\r\n    // 文本直接放到当前指向的节点中\r\n    text = text.replace(/\\s/g, \"\");\r\n    text &&\r\n      currentParent.children.push({\r\n        type: TEXT_TYPE,\r\n        text,\r\n        parent: currentParent,\r\n      });\r\n  }\r\n\r\n  function end() {\r\n    stack.pop(); // 弹出最后一个\r\n    currentParent = stack[stack.length - 1];\r\n  }\r\n\r\n  function advance(n) {\r\n    html = html.substring(n);\r\n  }\r\n\r\n  function parseStartTag() {\r\n    const start = html.match(startTagOpen);\r\n    if (start) {\r\n      const match = {\r\n        tagName: start[1], // 标签名\r\n        attrs: [],\r\n      };\r\n      advance(start[0].length);\r\n      // 如果不是开始标签的结束 就一直匹配下去\r\n      let attr, end;\r\n      while (\r\n        !(end = html.match(startTagClose)) &&\r\n        (attr = html.match(attribute))\r\n      ) {\r\n        advance(attr[0].length);\r\n        match.attrs.push({\r\n          name: attr[1],\r\n          value: attr[3] || attr[4] || attr[5] || true,\r\n        });\r\n      }\r\n      if (end) {\r\n        advance(end[0].length);\r\n      }\r\n      return match;\r\n    }\r\n    return false; // 不是开始标签\r\n  }\r\n\r\n  while (html) {\r\n    // 如果textEnd为0 说明是一个开始标签或者结束标签\r\n    // 如果textEnd>0 说明就是文本的结束位置\r\n    let textEnd = html.indexOf(\"<\"); // 如果indexOf中的索引是0 则说明是个标签\r\n    if (textEnd == 0) {\r\n      const startTagMatch = parseStartTag(); // 开始标签的匹配结果\r\n      if (startTagMatch) {\r\n        // 解析到的开始标签\r\n        start(startTagMatch.tagName, startTagMatch.attrs);\r\n        continue;\r\n      }\r\n\r\n      const endTagMatch = html.match(endTag);\r\n      if (endTagMatch) {\r\n        end();\r\n        advance(endTagMatch[0].length);\r\n        continue;\r\n      }\r\n    }\r\n\r\n    if (textEnd > 0) {\r\n      let text = html.substring(0, textEnd); // 文本内容\r\n      if (text) {\r\n        chars(text);\r\n        advance(text.length); // 解析到的文本\r\n      }\r\n    }\r\n  }\r\n\r\n  return root;\r\n}\r\n","import { parseHTML } from \"./parse\";\r\n\r\nfunction genProps(attrs) {\r\n  let str = \"\";\r\n  for (let i = 0; i < attrs.length; i++) {\r\n    let attr = attrs[i];\r\n    if (attr.name == \"style\") {\r\n      let obj = {};\r\n      attr.value.split(\";\").forEach((item) => {\r\n        let [key, value] = item.split(\":\");\r\n        obj[key] = value;\r\n      });\r\n      attr.value = obj;\r\n    }\r\n    str += `${attr.name}:${JSON.stringify(attr.value)},`;\r\n  }\r\n  return `{${str.slice(0, -1)}}`;\r\n}\r\n\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g;\r\nfunction gen(node) {\r\n  if (node.type == 1) {\r\n    return codegen(node);\r\n  } else {\r\n    let text = node.text;\r\n    if (!defaultTagRE.test(text)) {\r\n      return `_v(${JSON.stringify(text)})`;\r\n    } else {\r\n      let tokens = [];\r\n      let match;\r\n      defaultTagRE.lastIndex = 0;\r\n      let lastIndex = 0;\r\n      while ((match = defaultTagRE.exec(text))) {\r\n        let index = match.index;\r\n        if (index > lastIndex) {\r\n          tokens.push(JSON.stringify(text.slice(lastIndex, index)));\r\n        }\r\n        tokens.push(`_s(${match[1].trim()})`);\r\n        lastIndex = index + match[0].length;\r\n      }\r\n      if (lastIndex < text.length) {\r\n        tokens.push(JSON.stringify(text.slice(lastIndex)));\r\n      }\r\n      return `_v(${tokens.join(\"+\")})`;\r\n    }\r\n  }\r\n}\r\n\r\nfunction genChildren(children) {\r\n  return children.map((child) => gen(child)).join(\",\");\r\n}\r\n\r\nfunction codegen(ast) {\r\n  let children = genChildren(ast.children);\r\n  let code = `_c('${ast.tag}',${\r\n    ast.attrs.length > 0 ? genProps(ast.attrs) : \"null\"\r\n  }${ast.children.length > 0 ? `,${children}` : \"\"})`;\r\n  return code;\r\n}\r\n\r\nexport function compileToFunction(template) {\r\n  // 1.将template转化成ast语法树\r\n  let ast = parseHTML(template);\r\n  // 2.生成render方法（render方法执行后的返回结果就是虚拟DOM）\r\n  let code = codegen(ast);\r\n  // 模版引擎的实现原理就是 with + new Function\r\n  code = `with(this){return ${code}}`;\r\n  let render = new Function(code); // 根据代码生成render函数\r\n  return render;\r\n}\r\n","export function createElementVNode(vm, tag, data, ...children) {\r\n  if (data == null) {\r\n    data = {};\r\n  }\r\n  let key = data.key;\r\n  if (key) {\r\n    delete data.key;\r\n  }\r\n  return vnode(vm, tag, key, data, children);\r\n}\r\n\r\nexport function createTextVNode(vm, text) {\r\n  return vnode(vm, undefined, undefined, undefined, undefined, text);\r\n}\r\n\r\n// ast做的是语法层面的转化 它描述的是语法本身（描述js css html）\r\n// 虚拟dom描述的dom元素，可以增加一些自定义属性（描述dom）\r\nfunction vnode(vm, tag, key, data, children, text) {\r\n  return {\r\n    vm,\r\n    tag,\r\n    key,\r\n    data,\r\n    children,\r\n    text,\r\n  };\r\n}\r\n","import { createElementVNode, createTextVNode } from \"./vdom\";\r\nfunction createElm(vnode) {\r\n  let { tag, data, children, text } = vnode;\r\n  if (typeof tag === \"string\") {\r\n    vnode.el = document.createElement(tag);\r\n    patchProps(vnode.el, data);\r\n    children.forEach((child) => {\r\n      vnode.el.appendChild(createElm(child));\r\n    });\r\n  } else {\r\n    vnode.el = document.createTextNode(text);\r\n  }\r\n  return vnode.el;\r\n}\r\nfunction patchProps(el, props) {\r\n  for (const key in props) {\r\n    if (key == \"style\") {\r\n      for (const styleName in props.style) {\r\n        el.style[styleName] = props.style[styleName];\r\n      }\r\n    } else {\r\n      el.setAttribute(key, props[key]);\r\n    }\r\n  }\r\n}\r\nfunction patch(oldVNode, newVNode) {\r\n  const isRealElement = oldVNode.nodeType;\r\n  if (isRealElement) {\r\n    const elm = oldVNode; // 获取真实元素\r\n    const parentElm = elm.parentNode; // 拿到父元素\r\n    let newElm = createElm(newVNode);\r\n    parentElm.insertBefore(newElm, elm.nextSibling); // 将新元素插入到老元素的后面\r\n    parentElm.removeChild(elm); // 删除老元素\r\n    return newElm;\r\n  } else {\r\n    // diff算法\r\n  }\r\n}\r\nexport function initLifeCycle(Vue) {\r\n  Vue.prototype._update = function (vnode) {\r\n    // 将vnode转化成真实dom\r\n    const vm = this;\r\n    const el = vm.$el;\r\n    // patch既有初始化的功能 又有更新的逻辑\r\n    vm.$el = patch(el, vnode);\r\n  };\r\n  // _c('div',{},...children);\r\n  Vue.prototype._c = function () {\r\n    return createElementVNode(this, ...arguments);\r\n  };\r\n  // _v(text)\r\n  Vue.prototype._v = function () {\r\n    return createTextVNode(this, ...arguments);\r\n  };\r\n  Vue.prototype._s = function (value) {\r\n    if (typeof value !== \"object\") {\r\n      return value;\r\n    }\r\n    return JSON.stringify(value);\r\n  };\r\n  Vue.prototype._render = function () {\r\n    // 当渲染的时候会去实例中取值，可以将属性和视图绑定在一起\r\n    return this.$options.render.call(this);\r\n  };\r\n}\r\n\r\nexport function mountComponent(vm, el) {\r\n  vm.$el = el;\r\n  // 1.调用render方法产生虚拟节点 虚拟DOM\r\n  vm._update(vm._render());\r\n  // 2.根据虚拟DOM产生真实DOM\r\n  // 3.插入到el元素中\r\n}\r\n\r\n// Vue的核心流程\r\n// 1）创造响应式数据\r\n// 2）模版转换成ast语法树\r\n// 3）将ast语法树转换成render函数\r\n// 4）执行render函数会产生虚拟节点（使用响应式数据）\r\n// 5) 根据生成的虚拟节点创造真实的DOM\r\n// 后续每次数据更新可以只执行render函数（无需再次执行ast转化的过程）\r\n","import { initState } from \"./state\";\r\nimport { compileToFunction } from \"./compiler\";\r\nimport { mountComponent } from \"./lifecycle\";\r\n\r\nexport function initMixin(Vue) {\r\n  Vue.prototype._init = function (options) {\r\n    // vue vm.$options 就是获取用户的配置\r\n    const vm = this;\r\n    vm.$options = options; // 将用户的选项挂载到实例上\r\n\r\n    // 初始化状态\r\n    initState(vm);\r\n\r\n    if (options.el) {\r\n      vm.$mount(options.el); // 实现数据的挂载\r\n    }\r\n  };\r\n  Vue.prototype.$mount = function (el) {\r\n    const vm = this;\r\n    el = document.querySelector(el);\r\n    let ops = vm.$options;\r\n    if (!ops.render) {\r\n      // 先进行查找有没有render函数\r\n      let template; // 没有render看一下是否写了template，没写template采用外部的template\r\n      if (!ops.template && el) {\r\n        // 没有写模版，但写了el\r\n        template = el.outerHTML;\r\n      } else {\r\n        if (el) {\r\n          template = ops.template; // 如果有el，则采用模版的内容\r\n        }\r\n      }\r\n      if (template && el) {\r\n        // 这里需要对模版进行编译\r\n        const render = compileToFunction(template);\r\n        ops.render = render;\r\n      }\r\n    }\r\n\r\n    mountComponent(vm, el); // 组件的挂载\r\n  };\r\n}\r\n","import { initMixin } from \"./init\";\r\nimport { initLifeCycle } from \"./lifecycle\";\r\n\r\nfunction Vue(options) {\r\n  // options就是用户的选项\r\n  this._init(options);\r\n}\r\n\r\ninitMixin(Vue); // 扩展了init方法\r\ninitLifeCycle(Vue);\r\n\r\nexport default Vue;\r\n"],"names":["oldArrayProto","Array","prototype","newArrayProto","Object","create","methods","forEach","method","args","result","call","inserted","ob","__ob__","splice","observeArray","Observer","data","defineProperty","value","enumerable","isArray","__proto__","walk","keys","key","defineReactive","item","observe","target","get","set","newValue","initState","vm","opts","$options","initData","proxy","_data","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHTML","html","ELEMENT_TYPE","TEXT_TYPE","stack","currentParent","root","createASTElement","tag","attrs","type","children","parent","start","node","push","chars","text","replace","end","pop","length","advance","n","substring","parseStartTag","match","tagName","attr","name","textEnd","indexOf","startTagMatch","endTagMatch","genProps","str","i","obj","split","JSON","stringify","slice","defaultTagRE","gen","codegen","test","tokens","lastIndex","exec","index","trim","join","genChildren","map","child","ast","code","compileToFunction","template","render","Function","createElementVNode","vnode","createTextVNode","undefined","createElm","el","document","createElement","patchProps","appendChild","createTextNode","props","styleName","style","setAttribute","patch","oldVNode","newVNode","isRealElement","nodeType","elm","parentElm","parentNode","newElm","insertBefore","nextSibling","removeChild","initLifeCycle","Vue","_update","$el","_c","arguments","_v","_s","_render","mountComponent","initMixin","_init","options","$mount","querySelector","ops","outerHTML"],"mappings":"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"}